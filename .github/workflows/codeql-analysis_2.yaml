# This workflow lints, compiles, and publishes the solution.
name: Build

# on:
#   workflow_call:
#     inputs:
#       config:
#         required: true
#         type: string # must be one of Debug/Release/RelWithDebInfo
#       os:
#         required: true
#         type: string # must be one of windows/linux
#       version:
#         required: false
#         type: string
#         default: 0.0.0

on:
  workflow_dispatch

# env:
#   VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  build:
    name: Build
    runs-on: 'ubuntu-latest' # keep the variable inputs.os here
    permissions:
        actions: read
        contents: read
        security-events: write
        statuses: write
        packages: read


    strategy:
        fail-fast: false
        matrix:
          include:
          - language: c-cpp
            build-mode: none 

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        # with:
        #   submodules: "recursive"
        #   fetch-depth: 0
          
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
            languages: ${{ matrix.language }}
            build-mode: ${{ matrix.build-mode }}
          
    #   - name: Export GitHub Actions cache environment variables
    #     uses: actions/github-script@v6
    #     with:
    #       script: |
    #         core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
    #         core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    #   - name: Bootstrap vcpkg
    #     run: ${{ github.workspace }}/vcpkg/bootstrap-vcpkg${{ inputs.os == 'windows' && '.bat' || '.sh' }}

    #   - name: Configure project
    #     run: cmake -S . -B build --preset ci-${{ inputs.os }} -DUSER_PROVIDED_VERSION=${{ inputs.version }}
    #     shell: bash

    #   - name: Build project
    #     run: cmake --build build --config ${{ inputs.config }}

    #   - name: Test project
    #     run: ctest --test-dir build --output-on-failure --build-config ${{ inputs.config }}

    #   - name: Pack
    #     run: cpack -C ${{ inputs.config}}
    #     working-directory: build

    #   - name: Upload build artifacts
    #     uses: actions/upload-artifact@v4
    #     with:
    #       name: build-artifacts.${{ inputs.os }}.${{ inputs.config }}
    #       path: build/adlsfs-${{ inputs.version }}-${{ inputs.os == 'windows' && 'win64' || inputs.os == 'macos' && 'macos' || 'Linux' }}.zip
    #       retention-days: 3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
            category: "/language:${{matrix.language}}"